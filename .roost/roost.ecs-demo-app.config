build:
  type: text
  content: |
    #!/bin/sh

    # make all
    # docker build
    docker build -t ecs-demo-app .
    docker images --filter reference=ecs-demo-app
deploy:
  type: text
  content: |+
    #/bin/sh
    docker run -d -p 80:80 ecs-demo-app 
    export AWS_ACCESS_KEY_ID=$aws_access_key_id
    export AWS_SECRET_ACCESS_KEY=$aws_secret_access_key
    export AWS_DEFAULT_REGION=us-west-1
    aws ecr create-repository --repository-name ecs-demo-app-repository --region us-west-1
    docker tag ecs-demo-app 872232775305:cluster/cluster-0b236ce/ecs-demo-app-repository
    docker login -u AWS -p $(aws ecr get-login-password --region us-west-1) 872232775305:cluster/cluster-0b236ce
    docker push 872232775305:cluster/cluster-0b236ce/ecs-demo-app-repository

test: []
uninstall:
  type: text
  content: |+
    #!/bin/sh
    aws ecr delete-repository --repository-name ecs-demo-app-repository --region us-east-1 --force

dockerCompose: ''
CDK_Content: |-
  #!/bin/sh

  cdk deploy
CDK_Git_path: ''
CDK_Uninstall: |-
  #!/bin/sh

  cdk destroy
app_dependencies:
  type: text
  content: |-
    #!/bin/sh

    # make all
    # docker build
app_deploy:
  type: text
  content: |+
    #/bin/sh
    <<'###'
    Sample Deploy Instructions
    HELM_OPTS="--set clusterIP=${ROOST_CLUSTER_IP},tag=${ROOST_NAMESPACE},namespace=${ROOST_NAMESPACE}"

    helm install <helm-folder> -n <ns> $HELM_OPTS

    kubectl apply -f <file>.yaml
    ###

app_test: []
app_uninstall:
  type: text
  content: |+
    #!/bin/sh

app_docker_compose: ''
lastUpdatedBy: Yash Upadhyay
lastUpdatedOn: 2023-01-24T09:33:42.895Z
